# -*- coding: utf-8 -*-
"""Mapas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NPMBsDpHoe9-U6OZ9oEE5LpAHHAHSUyE

# **Mapas del Covid-19 en Colombia y Bogotá**

Importar las bibliotecas necesarias
"""

#Para manejo de graficas del mapa 
import matplotlib.pyplot as plot
import requests
import plotly.express as px
import plotly
import pandas as pd
import geopandas as gpd
import numpy as np
import os

"""Funciones para la ejecucion de Mapas de Bogotá y Colombia"""

def MapaCol():
  url="https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD&bom=true&format=true"
  response = requests.get(url)
  with open(os.path.join("DatosColombia.csv"), "wb") as f:
     f.write(response.content)
  data =pd.read_csv('DatosColombia.csv',low_memory=False)
  data.columns=['Fecha', 'ID', 'Fecha2', 'Código DIVIPOLA', 'depto', 'Código DIVIPOLA2', 'Ciudad','Edad','Unnidad', 'Sexo', 'Tipo', 'Ubicacion','Atencion', 'Código ISO del país','Nombre del país','Recuperado','Fecha de inicio de síntomas','Fecha de muerte','Fecha de diagnóstico','Fecha de recuperación','Tipo de recuperación','Pertenencia étnica','Nombre del grupo étnico']
  #Mapa GeoJSON para usar
  repo_url = 'https://gist.githubusercontent.com/john-guerra/43c7656821069d00dcbc/raw/be6a6e239cd5b5b803c6e7c2ec405b793a9064dd/Colombia.geo.json' #Archivo GeoJSON
  mx_regions_geo = requests.get(repo_url).json()
  extra=np.array(data.depto.value_counts())
  casosDepartamentos=np.array([extra[1],extra[6],extra[0],extra[24],extra[17],extra[19],extra[21],extra[18],extra[9],extra[7],extra[3],extra[28],extra[12],extra[22],extra[25],extra[10],extra[11],extra[13],extra[23],extra[15],extra[4],extra[16],extra[14],extra[2],extra[29],extra[26],extra[27],extra[30],extra[33],extra[32],extra[34],extra[35],extra[31]])
  nombresDepartamentos=np.array(["ANTIOQUIA", "ATLANTICO", "SANTAFE DE BOGOTA D.C", "BOLIVAR", "BOYACA", "CALDAS", "CAQUETA", "CAUCA", "CESAR", "CORDOBA", "CUNDINAMARCA", "CHOCO", "HUILA", "LA GUAJIRA", "MAGDALENA", "META", "NARIÑO", "NORTE DE SANTANDER", "QUINDIO", "RISARALDA", "SANTANDER", "SUCRE", "TOLIMA", "VALLE DEL CAUCA", "ARAUCA", "CASANARE", "PUTUMAYO", "AMAZONAS", "GUAINIA", "GUAVIARE", "VAUPES", "VICHADA", "ARCHIPIELAGO DE SAN ANDRES PROVIDENCIA Y SANTA CATALINA"])

  fig = px.choropleth(data_frame=data,
                    geojson=mx_regions_geo,
                    locations=nombresDepartamentos,
                    featureidkey='properties.NOMBRE_DPT', 
                    #El color depende de las cantidades de contagios
                    color=casosDepartamentos, 
                    color_continuous_scale=px.colors.sequential.Cividis_r, 
                    
                   )

  fig.update_geos(showcountries=False, showcoastlines=False, showland=False, fitbounds="locations")

  fig.update_layout(
    title_text = 'COVID-19 en Colombia',
    font=dict(
        family="Courier New, monospace",
        size=18,
        color="#131313"
    )
  )
  plotly.offline.plot(fig)

def MapaBog():
  url="https://datosabiertos.bogota.gov.co/dataset/44eacdb7-a535-45ed-be03-16dbbea6f6da/resource/b64ba3c4-9e41-41b8-b3fd-2da21d627558/download/osb_enftransm-covid26102020.csv"
  response = requests.get(url)
  with open(os.path.join("DatosBogota.csv"), "wb") as f:
    f.write(response.content)
  dato =pd.read_csv('DatosBogota.csv',low_memory=False,delimiter=";", encoding='iso-8859-1',names=['Fecha_Sintomas', 'FechaDiagnostico', 'Ciudad', 'Localidad', 'Edad', 'Uni_Med', 'Sexo', 'Fuente_Contagio', 'Ubicacion', 'Estado'])
  #Mapa GeoJSON para usar
  urlBog = 'https://raw.githubusercontent.com/Vaal-01/COVID-Colombia/master/codes/data/bogota_localidades.geojson' #Archivo GeoJSON
  bo_regions_geo = requests.get(urlBog).json()
  extra2=np.array(dato['Localidad'].value_counts())
  casosLocalidades=np.array([extra2[4], extra2[1], extra2[7], extra2[0], extra2[11], extra2[18], extra2[16], extra2[14], extra2[9], extra2[2], extra2[20], extra2[13], extra2[5], extra2[15], 1345, extra2[8], extra2[6], extra2[12], extra2[3], extra2[10]])
  nombresLocalidades=np.array(["CIUDAD BOLIVAR","SUBA", "RAFAEL URIBE URIBE", "KENNEDY", "USME", "LOS MARTIRES", "SANTA FE", "BARRIOS UNIDOS", "FONTIBON", "ENGATIVA", "CANDELARIA", "CHAPINERO", "ANTONIO", "TEUSAQUILLO", "SUMAPAZ", "SAN CRISTOBAL", "USAQUEN", "TUNJUELITO", "BOSA", "PUENTE ARANDA"])
  fig = px.choropleth(data_frame=dato,
                    geojson=bo_regions_geo,
                    locations=nombresLocalidades, 
                    featureidkey='properties.NOMBRE', 
                    color=casosLocalidades, 
                    color_continuous_scale=px.colors.sequential.Viridis, 
                   )

  fig.update_geos(showcountries=True, showcoastlines=True, showland=True, fitbounds="locations")

  fig.update_layout(
    title_text = 'COVID-19 en Bogotá',
    font=dict(
        family="Courier New, monospace",
        size=18,
        color="#131313"
    )
  )
  plotly.offline.plot(fig)

#"""Ejecución desde Colab"""

#def main():
#    print('DATOS ESPECÍFICOS DE COLOMBIA :D')
#    print('Comenzando generación de mapas de calor')
#    MapaCol()
#    print('Mapa de Colombia generado en pagina html')
#    print('DATOS ESPECÍFICOS DE BOGOTÁ :D') 
#    print('Comenzando generación de mapas de calor')
#    MapaBog()
#    print('Mapa de Colombia generado en pagina html')

#if __name__ == '__main__':
#    main()